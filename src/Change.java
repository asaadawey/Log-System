/* 
 * 
 * Â® All rights reserved 2019 , By Ahmed Saadawey
 * 
 */
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author username
 */
public class Change extends javax.swing.JFrame {

    /**
     * Creates new form Change
     */
    public Change(String s) {
        
        initComponents();
        if(s.equals("Admin"))
            Admin();
        else
            Employee();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("true"), this, org.jdesktop.beansbinding.BeanProperty.create("undecorated"));
        bindingGroup.addBinding(binding);

        String yy[] = n.get(2);
        jComboBox1.setModel(new DefaultComboBoxModel(yy));

        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear Fields");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Current");

        jLabel2.setText("New");

        jLabel3.setText("Emp");

        jPanel1.setBackground(new java.awt.Color(235, 149, 50));
        jPanel1.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("X");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel6);
        jLabel6.setBounds(580, 20, 40, 40);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Change Password");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel9);
        jLabel9.setBounds(10, 10, 330, 50);

        jButton3.setText("Delete Employee");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Admin Privillage");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton4.setText("Show");

        jButton5.setText("Show");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 326, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jButton4))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1))))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void Employee()
{
    jButton3.setVisible(false);
    emp=true;
      admin=false;
}
public void Admin()
{
     jButton3.setVisible(true);
       emp=false;
       admin=true;
}
public boolean admin=false;
public boolean emp=false;
private MYSQL n = new MYSQL();
   public String[] passget() throws InterruptedException
    {
         
        return n.get(1);
   
    }
    public boolean conflict(String s, String[] ele, int ch) {
        boolean last = true;
        try {
            switch (ch) {
                //1 for passwords
                case 1:
                    for (int i = 0; i < ele.length; i++) {
                        ele[i] = EncryptionDemo.decrypt(ele[i], "");
                    }
                    for (int i = 0; i < ele.length; i++) {
                        if (s.equals(ele[i])) {
                            last = false;
                        }

                    }
                    break;
                // 2 for usernames
                case 2:
                    // for (int i = 0; i < ele.length; i++) {
                    //      ele[i] = EncryptionDemo.decrypt(ele[i], "");

                    for (int i = 0; i < ele.length; i++) {
                        if (s.equals(ele[i])) {
                            last = false;
                        }

                    }
                    break;
            }
        } catch (Exception e) {

        }
        return last;
    }
       public void writetolog(String s) throws Exception {
        DateFormat dateFormat2 = new SimpleDateFormat("dd/MM/yyyy hh.mm aa");// Create a date object
        String dateString2 = dateFormat2.format(new Date()).toString();

        Path pth = Paths.get(EncryptionDemo.decrypt(Files.readAllLines(Paths.get("Path.in")).get(0),""));
        try (OutputStream os = Files.newOutputStream(pth, StandardOpenOption.CREATE, StandardOpenOption.WRITE,
                StandardOpenOption.APPEND); PrintWriter writer = new PrintWriter(os)) {
            writer.println();
            System.err.println(s);
            writer.println(EncryptionDemo.encrypt("[" + dateString2 + "] " + s, ""));
            writer.print(EncryptionDemo.encrypt("[" + dateString2 + "]", ""));
            //   writer.print(EncryptionDemo.encrypt("[" + dateString2 + "]",""));
        } catch (Exception e) {

        }
        
       }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(!jTextField1.getText().equals("") || !jTextField2.getText().equals(""))
{
        if(jComboBox1.getSelectedItem().toString().equals("Admin") && !admin)
{
   JOptionPane.showMessageDialog(this,"You don't have the right permessions to edit admin password");
}
else
{  
  
 
    try {
        String[] pass = passget();
        String[] user = n.get(2);
        if (conflict(jTextField1.getText(), passget(), 1)) {
            {
                int n = jComboBox1.getSelectedIndex();
                if (jTextField2.getText().equals(pass[n]) || adminpriv) {
                    if(jTextField2.getText().equals(pass[jComboBox1.getSelectedIndex()]) || (jTextField2.getText().equals(pass[0]) && adminpriv) )
                    {
                        String s = jTextField1.getText();
                        String error = "";
                        char ch;
                        boolean capitalFlag = false;
                        boolean lowerCaseFlag = false;
                        boolean numberFlag = false;
                        for (int i = 0; i < s.length(); i++) {
                            ch = s.charAt(i);
                            if (Character.isDigit(ch)) {
                                numberFlag = true;
                            } else if (Character.isUpperCase(ch)) {
                                capitalFlag = true;
                            } else if (Character.isLowerCase(ch)) {
                                lowerCaseFlag = true;
                            }
                            
                        }
                        if (capitalFlag == false) {
                            error += "No at least one capital letter \n";
                        }
                        if (lowerCaseFlag == false) {
                            error += "No at least one letter \n";
                        }
                        if (numberFlag == false) {
                            error += "No at least one number \n";
                        }
                        if (numberFlag && capitalFlag && lowerCaseFlag) {
                             try {  
                              this.n.ChangePassword(jComboBox1.getSelectedItem().toString(), jTextField1.getText());
                                File export = new File("Path.in");
                                if (export.canRead()) {
                                    try {
                                        String temp = EncryptionDemo.decrypt(Files.readAllLines(Paths.get("Path.in")).get(0), "");
       
                                            writetolog("User" + jComboBox1.getSelectedItem().toString() + " Changed His Password Successfully to " + jTextField1.getText().substring(0, 1) + "***** ");
                                            JOptionPane.showMessageDialog(null, "User " + jComboBox1.getSelectedItem().toString() + " Changed His Password Successfully to " + jTextField1.getText().substring(0, 1) + "***** ");
                                   
                                    } catch (Exception ex) {
                                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                    }

                                }

                            } catch (Exception ex) {
                                Logger.getLogger(Change.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(null, "Password is not secure \n"+error);
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Incorrect Admin Password");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Current Password is Incorrect");
                }
            }
            
            
            
            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Can't process your password \n please enter another password");
        }
        //   } else {
        //
        //   }
    } catch (Exception ex) {
        Logger.getLogger(Change.class.getName()).log(Level.SEVERE, null, ex);
    }
}
}
else
{
    JOptionPane.showMessageDialog(null, "Empty Fields Detected \nCheck your fields");
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        JOptionPane.showMessageDialog(null, "Unpublished work \n \u00a9 2019 Ahmed Saadawey \n All Rights Reserved");
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(!jComboBox1.getSelectedItem().toString().equals("Admin"))
{
    int a = jComboBox1.getSelectedIndex();
    n.DeleteUser(jComboBox1.getSelectedItem().toString());
                               JOptionPane.showMessageDialog(null, "Done");
                               jComboBox1.removeItemAt(a);
                         
                                //   writer.print(EncryptionDemo.encrypt("[" + dateString2 + "]",""));
}
else
{
    JOptionPane.showMessageDialog(null,"You can't Delete Admin");
}
    }//GEN-LAST:event_jButton3ActionPerformed
public boolean adminpriv=false;
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
      if(jCheckBox1.isSelected())
      {
          
          JOptionPane.showMessageDialog(this,"In order to change password with admin , please type in current password field the admin password");
          adminpriv=true;
      }
      else
      {
         adminpriv=false; 
      }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
public void refresh()
{
    int liness = 0;
        try {
            liness = (int) Files.lines(Paths.get("workers.in")).count();
        } catch (IOException ex) {
        //    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        String yy[] = new String[liness];
        for (int i = 0; i < liness; i++) {
            try {
                yy[i] = Files.readAllLines(Paths.get("workers.in")).get(i);
            } catch (IOException ex) {
           //     Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
jComboBox1.setModel(new DefaultComboBoxModel(yy));
}
/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Change.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Change.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Change.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Change.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Change("Admin").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jTextField1;
    private javax.swing.JPasswordField jTextField2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
