/* 
 * 
 * Â® All rights reserved 2019 , By Ahmed Saadawey
 * 
 */
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jnativehook.GlobalScreen;
import org.jnativehook.NativeHookException;

/**
 *
 * @author Ahmed Saadawey
 * 2019 All Rights Reserved
 */
public class Password extends javax.swing.JFrame {

    /**
     * Creates new form Password
     */
    public Password() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("true"), this, org.jdesktop.beansbinding.BeanProperty.create("undecorated"));
        bindingGroup.addBinding(binding);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(235, 149, 50));
        jPanel2.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("X");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel6);
        jLabel6.setBounds(420, 20, 40, 40);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Confirm");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 10, 290, 50);

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));

        jPasswordField1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Enter Pass");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public String Curr = "";
public   EncryptionDemo cryptoUtil=new EncryptionDemo();
      public String key = "ezeon8547";
      public int cmp;
      public MYSQL n = new MYSQL();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                    try {
            ///refresh location////
            path=EncryptionDemo.decrypt(Files.readAllLines(Paths.get("Path.in")).get(0), key);
            String[] pass = n.get(1);
            if (jPasswordField1.getText().equals(pass[cmp])) {

                String[] passwords = n.get(1);
                
                int liness = (int) Files.lines(Paths.get(path)).count();
                String yy[] = new String[liness];
                for (int i = 0; i < liness; i++) {
                    yy[i] = Files.readAllLines(Paths.get(path)).get(i);
                    yy[i] = cryptoUtil.decrypt(yy[i], this.key);

                }
                 {
                    for (int i = 0; i < liness; i++) {
                        if (!yy[i].contains("7s") && !yy[i].contains("7  S") ) {
                        } else {
                            yy[i] = "Private Info Vanished";
                            if (yy[i + 1].contains("TAB")) {
                                yy[i + 1] = "Private Info Vanished";
                            }
                        }

                    }
                    
                          for (int i = 0; i < liness; i++) 
                            yy[i]=  stringContainsItemFromList(yy[i], passwords);
                          writetolog("Log opened");
                    LogWindow n = new LogWindow();
               //     n.setUndecorated(true); // Remove title bar
                         n.n=yy;
                    n.setVisible(true);
                    int counter=1;
                    for (int i = 0; i < liness; i++) {   
                        n.recieve(yy[i]);

                        // Files.setAttribute(pth, "dos:hidden", true);
                
                    }
              n.tidy();
                }

  
            } else {
                                                    DateFormat dateFormat2 = new SimpleDateFormat("dd/MM/yyyy hh.mm aa");// Create a date object
                String dateString2 = dateFormat2.format(new Date()).toString();
                Path pth = Paths.get(path);
                try (OutputStream os = Files.newOutputStream(pth, StandardOpenOption.CREATE, StandardOpenOption.WRITE,
                        StandardOpenOption.APPEND); PrintWriter writer = new PrintWriter(os)) {
                    writer.println();
                    writer.println(cryptoUtil.encrypt("[" + dateString2 + "]"+" Wrong Password , User : \"" + Curr + "\"" , this.key));
writer.print(cryptoUtil.encrypt("[" + dateString2 + "]",""));
GlobalScreen.unregisterNativeHook();
                }
                catch (Exception e)
                {
                    
                }
                JOptionPane.showMessageDialog(null, "Wrong password");
            }
            setVisible(false); 

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public void writetolog(String s) {
        DateFormat dateFormat2 = new SimpleDateFormat("dd/MM/yyyy hh.mm aa");// Create a date object
        String dateString2 = dateFormat2.format(new Date()).toString();

        Path pth = Paths.get(path);
        try (OutputStream os = Files.newOutputStream(pth, StandardOpenOption.CREATE, StandardOpenOption.WRITE,
                StandardOpenOption.APPEND); PrintWriter writer = new PrintWriter(os)) {
            writer.println();
            System.err.println(s);
            writer.println(EncryptionDemo.encrypt("[" + dateString2 + "] " + s, ""));
            writer.print(EncryptionDemo.encrypt("[" + dateString2 + "]", ""));
            //   writer.print(EncryptionDemo.encrypt("[" + dateString2 + "]",""));
        } catch (Exception e) {

        }
    }
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
   //     Return.Re(path);
    }//GEN-LAST:event_formWindowClosing

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:

        setVisible(false);
        NewJFrame n =new NewJFrame();
        try {
            n.register();
        } catch (NativeHookException ex) {
            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel6MouseClicked

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        // TODO add your handling code here:
  
    }//GEN-LAST:event_jPasswordField1KeyTyped

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
              boolean isOn = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);
        if(isOn)
            jLabel2.setText("Caps Lock Is On");
        else
           jLabel2.setText(""); 
    }//GEN-LAST:event_jPasswordField1KeyPressed
public static String stringContainsItemFromList(String inputStr, String[] items) {
     String s = inputStr;
    for(int i =0; i < items.length; i++)
    {
        if(!inputStr.contains(items[i]) && !inputStr.contains(items[i].toUpperCase()))
        {
        } else {
            s=s.replaceAll(items[i],"");
        }
    }
    return s;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Password().setVisible(true);
            }
        });
    }
    public String path = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
